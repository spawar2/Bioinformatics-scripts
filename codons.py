class dna_to_protein:
 def __init__(me):
   me.codons = {} # an empty dictionary for the codons
   me.codons["AAA"] = "P" 
   me.codons["AAG"] = "P" 
   me.codons["AAC"] = "P" 
   me.codons["AAT"] = "P" 
   me.codons["AGA"] = "P" 
   me.codons["AGG"] = "P" 
   me.codons["AGC"] = "P" 
   me.codons["AGT"] = "P" 
   me.codons["ACA"] = "P" 
   me.codons["ACG"] = "P" 
   me.codons["ACC"] = "P" 
   me.codons["ACT"] = "P" 
   me.codons["ATA"] = "P" 
   me.codons["ATG"] = "P" 
   me.codons["ATC"] = "P" 
   me.codons["ATT"] = "P" 
   me.codons["GAA"] = "P" 
   me.codons["GAG"] = "P" 
   me.codons["GAC"] = "P" 
   me.codons["GAT"] = "P" 
   me.codons["GGA"] = "P" 
   me.codons["GGG"] = "P" 
   me.codons["GGC"] = "P" 
   me.codons["GGT"] = "P" 
   me.codons["GCA"] = "P" 
   me.codons["GCG"] = "P" 
   me.codons["GCC"] = "P" 
   me.codons["GCT"] = "P" 
   me.codons["GTA"] = "P" 
   me.codons["GTG"] = "P" 
   me.codons["GTC"] = "P" 
   me.codons["GTT"] = "P" 
   me.codons["CAA"] = "P" 
   me.codons["CAG"] = "P" 
   me.codons["CAC"] = "P" 
   me.codons["CAT"] = "P" 
   me.codons["CGA"] = "P" 
   me.codons["CGG"] = "P" 
   me.codons["CGC"] = "P" 
   me.codons["CGT"] = "P" 
   me.codons["CCA"] = "P" 
   me.codons["CCG"] = "P" 
   me.codons["CCC"] = "P" 
   me.codons["CCT"] = "P" 
   me.codons["CTA"] = "P" 
   me.codons["CTG"] = "P" 
   me.codons["CTC"] = "P" 
   me.codons["CTT"] = "P" 
   me.codons["TAA"] = "P" 
   me.codons["TAG"] = "P" 
   me.codons["TAC"] = "P" 
   me.codons["TAT"] = "P" 
   me.codons["TGA"] = "P" 
   me.codons["TGG"] = "P" 
   me.codons["TGC"] = "P" 
   me.codons["TGT"] = "P" 
   me.codons["TCA"] = "P" 
   me.codons["TCG"] = "P" 
   me.codons["TCC"] = "P" 
   me.codons["TCT"] = "P" 
   me.codons["TTA"] = "P" 
   me.codons["TTG"] = "P" 
   me.codons["TTC"] = "P" 
   me.codons["TTT"] = "P" 
